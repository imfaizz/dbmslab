--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------						CREATION OF TABLES
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE SALESMAN(
SALESMAN_ID NUMBER(4),
NAME VARCHAR(15),
CITY VARCHAR(15),
COMMISSION NUMBER(7,2),
CONSTRAINT PK_SID PRIMARY KEY(SALESMAN_ID));


CREATE CUSTOMER(
CUSTOMER_ID NUMBER(2),
CUSTOMER_NAME VARCHAR(15),
CITY VARCHAR(15),
GRADE NUMBER(3),
SALESMAN_ID NUMBER(4),
CONSTRAINT PK_CID PRIMARY KEY(CUSTOMER_ID),
CONSTRAINT FK_SIDD FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE CASCADE));


CREATE TABLE ORDERS
(ORD_NO NUMBER (5),
PURCHASE_AMT NUMBER (10, 2),
ORD_DATE DATE,
CUSTOMER_ID NUMBER(2),
SALESMAN_ID NUMBER(4),
CONSTRAINT PK_ONO PRIMARY KEY (ORD_NO),
CONSTRAINT FK_CID FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
CONSTRAINT FK_SID FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE CASCADE));

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					INSERTION
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

INSERT INTO SALESMAN VALUES
(&SALESMAN_ID,'&NAME','&CITY',&COMMISSION);

INSERT INTO CUSTOMER VALUES
(&CUSTOMER_ID,'&CUS_NAME','&CITY',&GRADE,&SALESMAN_ID);

INSERT INTO ORDERS VALUES
(&ORD_NO,&PURCHASE_AMT,'&ORD_DATE',&CUSTOMER_ID,&SALESMAN_ID);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					SQL QUERIES
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1)  Count the customers with grades above Bangaloreâ€™s average.

SELECT COUNT(CUSTOMER_ID) 
FROM CUSTOMER
WHERE GRADE>(SELECT AVG(GRADE) FROM CUSTOMER WHERE CITY='BANGALORE');

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2)  Find the name and numbers of all salesmen who had more than one customer.

SELECT S.NAME,S.SALESMAN_ID
FROM SALESMAN S,CUSTOMER C
WHERE S.SALESMAN_ID=C.SALESMAN_ID 
GROUP BY S.NAME,S.SALESMAN_ID 
HAVING COUNT(C.CUSTOMER_ID)>1;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3)  List all the salesman and include those who have and don't have a customer in their cities (UNION)

(SELECT S.SALESMAN_ID,S.NAME,C.CUS_NAME
FROM SALESMAN S,CUSTOMER C
WHERE S.SALESMAN_ID=C.SALESMAN_ID AND
S.CITY=C.CITY) UNION
(SELECT S1.SALESMAN_ID,S1.NAME,'NO_CUSTOMER'
FROM SALESMAN SI,CUSTOMER C1
WHERE SI.SALESMAN_ID=C1.SALESMAN_ID AND
S1.CITY!=C1.CITY);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4)  Create a view that finds the salesman who has the customer with the highest order of a day. 

CREATE VIEW HIGHEST_ORDER AS
(SELECT * FROM ORDERS);
 
SELECT SALESMAN_ID,PURCHASE_AMT,CUSTOMER_ID FROM HIGHEST_ORDER
WHERE PURCHASE_AMT=(SELECT MAX PURCHASE_AMT
FROM HIGHEST_ORDER);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5)Demonstrate the DELETE operation by removing salesman with id 1000. All his orders must also be deleted.

DELETE FROM SALESMAN 
WHERE SALESMAN_ID=1000;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

