--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                                                                                                         
					 TABLE CREATION
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE PUBLISHER
(NAME VARCHAR(20),
PHONE NUMBER,
ADDRESS VARCHAR (20),
CONSTRAINT PK_PNAME PRIMARY KEY(NAME));


CREATE TABLE BOOK
(BOOK_ID NUMBER,
TITLE VARCHAR(20),
PUB_YEAR NUMBER(4),
PUB_NAME VARCHAR(15),
CONSTRAINT  PK_BID  PRIMARY KEY(BOOK_ID),
CONSTRAINT FK_PNAME REFERENCES PUBLISHER (NAME) ON DELETE CASCADE));


CREATE TABLE BOOK_AUTHORS
(AUTHOR_NAME VARCHAR (20),
CONSTRAINT PK_BID_ANAME PRIMARY KEY (BOOK_ID, AUTHOR_NAME,
CONSTRAINT FK_BOID FOREIGN KEY(BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE));


CREATE TABLE LIBRARY_BRANCH
(BRANCH_ID NUMBER,
BRANCH_NAME VARCHAR(50),
ADDRESS VARCHAR(50)
PK_BRID PRIMARY KEY(BRANCH_ID);


CREATE TABLE BOOK_COPIES
(BOOK_ID NUMBER(5),
BRANCH_ID NUMBER(5),
NO_OF_COPIES NUMBER(4),
CONSTRAINT PK_BID_BRID PRIMARY KEY (BOOK_ID, BRANCH_ID),
CONSTRAINT FK_BOIDD FOREIGN KEY(BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE,
CONSTRAINT FK_BRIDD FOREIGN KEY(BRANCH_ID) REFERENCES LIBRARY_BRANCH (BRANCH_ID) ON DELETE CASCADE));


CREATE TABLE BOOK_LENDING
(BOOK_ID NUMBER(5),
BRANCH_ID NUMBER(5),
CARD_NO NUMBER(4),
DATE_OUT DATE,
DUE_DATE DATE,
CONSTRAINT PK_BID_BRID_CID PRIMARY KEY(BOOK_ID, BRANCH_ID, CARD_NO),
CONSTRAINT FK_BKIDD FOREIGN KEY(BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE,
CONSTRAINT FK_BRIDD FOREIGN KEY(BRANCH_ID) REFERENCES LIBRARY_BRANCH (BRANCH_ID) ON DELETE CASCADE));

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
					INSERTION OF TABLES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
INSERT INTO PUBLISHER VALUES
('&NAME','&ADDRESS',&PHONE);

INSERT INTO LIBRARY_BRANCH VALUES
(&BRANCH_ID,'&BRANCH_NAME','&ADDRESS);

INSERT INTO BOOK VALUES
(&BOOK_ID,'&TITLE',&PUB_YEAR,'&PUB_NAME');

INSERT INTO BOOK_AUTHORS VALUES
(&BOOK_ID,'&AUTHOR_NAME');

INSERT INTO BOOK_COPIES VALUES
(&BOOK_ID,&BRANCH_ID,&NO_OF_COPIES);

INSERT INTO BOOK_LENDING VALUES
(&BOOK_ID,&BRANCH_ID,&CARD_NO,'&DATE_OUT','&DUE_DATE));

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 

					SQL QUERIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 

1) Retrieve details of all books in the library â€“ id, title, name of publisher, authors,number of copies in each branch, etc.

SELECT B.BOOK_ID, B.TITLE, B.PUBLISHER_NAME, A.AUTHOR_NAME,
C.NO_OF_COPIES, L.BRANCH_ID
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L
WHERE B.BOOK_ID=A.BOOK_ID
AND B.BOOK_ID=C.BOOK_ID
AND L.BRANCH_ID=C.BRANCH_ID;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
2)  Get the particulars of borrowers who have borrowed more than 3 books, but from Jan 2017 to Jun 2017

SELECT * FROM BOOK_LENDING
WHERE DATE_OUT BETWEEN '01-JAN-2017' AND '30-JUN-2017' AND 
CARD_NO IN( SELECT CARD_NO FROM BOOK_LENDING GROUP BY CARD_NO HAVING COUNT(CARD_NO)>3);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3)  Delete a book in BOOK table. Update the contents of other tables to reflect this data manipulation operation.

DELETE FROM BOOK
WHERE BOOK_ID=3;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4)  Partition the BOOK table based on year of publication. Demonstrate its working with a simple query.

SQL>CONNECT SYSTEM1 MANJUNATH;
SQL>GRANT CREATE VIEW 10B2;
SQL>CONNECT B2/B2

CREATE VIEW V_PUBLICATION AS
SELECT PUB_YEAR
FROM BOOK;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)  Create a view of all books and its number of copies that are currently available in the Library.

CREATE VIEW ALL_BOOKS AS
SELECT B.BOOK_ID,B.TITLE,C.NO_OF_COPIES,L.BRANCH_NAME 
FROM BOOK B,BOOK_COPIES C,LIBRARY_BRANCH L
WHERE B.BOOK_ID=C.BOOK_ID
AND L.BRANCH_ID=C.BRANCH_ID;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
