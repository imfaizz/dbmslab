--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                                                                                                         
					 TABLE CREATION
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE STUDENT (
USN VARCHAR (10) ,
SNAME VARCHAR (20),
ADDRESS VARCHAR (20),
PHONE NUMBER (10),
GENDER CHAR (1),
CONSTRAINT PK_USN PRIMARY KEY(USN));


CREATE TABLE SEMSEC (
SSID CHAR (2),
SEM NUMBER (1),
SEC CHAR,
CONSTRAINT PK_SSID PRIMARY KEY (SSID),
CONSTRAINT CPK_S CHECK(SEM BETWEEN 1 AND 8 ));


CREATE TABLE CLASS (
USN VARCHAR (10),
SSID VARCHAR (2),
CONSTRAINT CPK_USN_SSID PRIMARY KEY (USN, SSID),
CONSTRAINT FK_U FOREIGN KEY (USN) REFERENCES STUDENT (USN) ON DELETE CASCADE,
CONSTRAINT FK_S FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID) ON DELETE CASCADE);


CREATE TABLE SUBJECT (
SUBCODE VARCHAR (8),
TITLE VARCHAR (15),
SEM NUMBER (1),
CREDITS NUMBER (2),
CONSTRAINT PK_SUB PRIMARY KEY (SUBCODE),
CONSTRAINT CPK_SI CHECK (SEM BETWEEN 1 AND 8),
CONSTRAINT CK_SC FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE);


CREATE TABLE IAMARKS (
USN VARCHAR (20),
SUBCODE VARCHAR (8),
SSID CHAR (2),
TEST1 NUMBER (2),
TEST2 NUMBER (2),
TEST3 NUMBER (2),
FINALIA NUMBER (2),
CONSTRAINT PK_USS PRIMARY KEY (USN, SUBCODE, SSID),
CONSTRAINT FK_UF FOREIGN KEY (USN) REFERENCES STUDENT (USN) ON DELETE CASCADE,
CONSTRAINT FK_SSC FOREIGN KEY (SUBCODE) REFERENCES SUBJECT (SUBCODE) ON DELETE CASCADE,
CONSTRAINT FK_SSID FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID) ON DELETE CASCADE);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
					INSERTION OF TABLES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
INSERT INTO STUDENT VALUES
('&USN','&SNAME','&ADDRESS',&PHONE,'&GENDER');

INSERT INTO SEMSEC VALUES
('&SSID',&SEM,'&SEC');

INSERT INTO CLASS VALUES
('&USN','&SSID');

INSERT INTO SUBJECT VALUES
(&SUB_CODE,'&TITLE',&SEM,&CREDITS);

INSERT INTO IAMARKS VALUES
('&USN','&SUBCODE','&SSID',&TEST1,&TEST2,&TEST3);


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 

					SQL QUERIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
1. List all the student details studying in fourth semester ‘C’ section.

SELECT S.USN, S.SNAME, S.ADRESS,S.PHONE,S.GENDER
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID AND
SS.SEM = 4 AND SS.SEC=‘C‘;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
2)  Compute the total number of male and female students in each semester and in each section.

SELECT SS.SEM, SS.SEC, S.GENDER, COUNT (S.GENDER) 
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID
GROUP BY SS.SEM, SS.SEC, S.GENDER;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3)   Create a view of Test1 marks of student USN ‘1MV15CS060’ in all subjects.

CREATE VIEW TEST1_MARKS AS
SELECT TEST1, SUBCODE
FROM IAMARKS
WHERE USN = '1MV15CS060';

SELECT * FROM TEST1_MARKS
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4)  Calculate the FinalIA (average of best two test marks) and update the corresponding table for all students.

CREATE OR REPLACE PROCEDURE AVGMARKS
IS
CURSOR C_IAMARKS IS
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B,GREATEST(TEST3,TEST2) AS C
FROM IAMARKS
WHERE FINALIA IS NULL
FOR UPDATE;

C_A NUMBER;
C_B NUMBER;
C_C NUMBER;
C_SUM NUMBER;
C_AVG NUMBER;
BEGIN
OPEN C_IAMARKS;
LOOP
FETCH C_IAMARKS INTO C_A, C_B, C_C;
EXIT WHEN C_IAMARKS%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(C_A || ' ' || C_B || ' ' || C_C);
IF (C_A != C_B) THEN
C_SUM:=C_A+C_B;
ELSE
C_SUM:=C_A+C_C;
END IF;
C_AVG:=C_SUM/2;
DBMS_OUTPUT.PUT_LINE('SUM = '||C_SUM);
DBMS_OUTPUT.PUT_LINE('AVERAGE = '||C_AVG);
UPDATE IAMARKS SET FINALIA=C_AVG WHERE CURRENT OF C_IAMARKS;
END LOOP;
CLOSE C_IAMARKS;
END;

SELECT * FROM IAMARKS;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)  Categorize students based on the following criterion:
If FinalIA = 17 to 20 then CAT = ‘Outstanding’
If FinalIA = 12 to 16 then CAT = ‘Average’
If FinalIA< 12 then CAT = ‘Weak’
Give these details only for 8 th semester A, B, and C section students.

SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,
(CASE
WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
ELSE 'WEAK'
END) AS CAT
FROM STUDENT S, SEMSEC SS, IAMARKS IA, SUBJECT SUB
WHERE S.USN = IA.USN AND
SS.SSID = IA.SSID AND
SUB.SUBCODE = IA.SUBCODE AND
SUB.SEM = 8;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
