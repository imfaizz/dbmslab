--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					CREATION OF TABLES
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE ACTOR(
ACT_ID NUMBER(2),
ACT_NAME VARCHAR(15),
ACT_GENDER CHAR,
CONSTRAINT PK_ACT PRIMARY KEY (ACTOR_ID));


CREATE TABLE DIRECTOR(
DIR_ID NUMBER(2),
DIR_NAME VARCHAR(20),
DIR_PHONE NUMBER(10),
CONSTRAINT PK_DIR PRIMARY KEY(DIR_ID));


CREATE TABLE MOVIES(
MOV_ID NUMBER(3),
MOV_TITLE VARCHAR(25),
MOV_YEAR NUMBER(4),
MOV_LANG VARCHAR(15),
DIR_ID NUMBER(2),
CONSTRAINT PK_MOV PRIMARY KEY(MOV_ID),
CONSTRAINT FK_DIR_ID FOREIGN KEY(DIR_ID) REFERENCES DIRECTOR(DIR_ID) ON DELETE CASCADE);


CREATE TABLE MOV_CAST(
ACT_ID NUMBER(2),
MOV_ID NUMBER(3),
ROLE VARCHAR(20),
CONSTRAINT CPK_ID PRIMARY KEY(ACT_ID,MOV_ID),
CONSTRAINT FK_AID FOREIGN KEY(ACT_ID) REFERENCES ACTOR(ACT_ID) ON DELETE CASCADE,
CONSTRAINT FK_MID FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE);


CREATE TABLE RATING(
MOV_ID NUMBER(3),
REV_STARS NUMBER(3),
CONSTRAINT CPK_KV PRIMARY KEY(MOV_ID,REV_STARS),
CONSTRAINT FK_MOID FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					INSERTION
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
INSERT INTO ACTOR VALUES
(&ACT_ID,'&ACT_NAME','&ACT_GENDER');

INSERT INTO DIRECTOR VALUES
(&DIR_ID,'&DIR_NAME',&DIR_PHONE);

INSERT INTO MOVIES VALUES
(&MOV_ID,'&MOV_TITLE',&MOV_YEAR,'&MOV_LANG',&DIR_ID);

INSERT INTO MOV_CAST VALUES
(&ACT_ID,&MOV_ID,'&ROLE');

INSERT INTO RATING VALUES
(&MOV_ID,&REV_STARS);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					SQL QUERIES
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1)List all the titles of all movies directed by hitchcock

SELECT M.MOV_TITLE
FROM DIRECTOR D,MOVIES M
WHERE D.DIR_ID=M.DIR_ID AND
D.DIR_NAME='HITCHCOCK';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2)Find the movie names where one or more actor acted in two or more movies

SELECT M.MOV_TITLE
FROM MOVIES M,MOV_CAST MV
WHERE M.MOV_ID=MV.MOV_ID AND
ACT_ID IN (SELECT ACT_ID 
                             FROM MOV_CAST
	           GROUP BY MOV_TITLE
                             HAVING COUNT(*)>1) ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3)List all actors who acted in a movie before 2000 and also in a movie after 2015 (use JOIN operation).

(SELECT A.ACT_NAME
FROM ACTOR A JOIN MOV_CAST M ON
A.ACT_ID=M.ACT_ID JOIN
MOVIES M1 ON M.MOV_ID=M1.MOV_ID
WHERE M1.MOV_YEAR<2000)
INTERSECT
(SELECT A.ACT_NAME
FROM ACTOR A JOIN MOV_CAST M ON
A.ACT_ID=M.ACT_ID JOIN
MOVIES M1 ON M.MOV_ID=M1.MOV_ID
WHERE M1.MOV_YEAR>2015);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4)Find the title of movies and number of stars for each movie that has at least one rating and find the highest number of stars that movie received. Sort the result by movie title.

SELECT MOV_TITLE, MAX (REV_STARS)
FROM MOVIES
INNER JOIN RATING USING (MOV_ID)
GROUP BY MOV_TITLE
HAVING MAX (REV_STARS)>0
ORDER BY MOV_TITLE;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)Update rating of all movies directed by Steven Spielberg in 1 to 5

UPDATE RATING
SET REV_STARS=5
WHERE MOV_ID IN (SELECT MOV_ID 
		   FROM MOVIES
		   WHERE DIR_ID IN 
		   (SELECT DIR_ID
	                      FROM DIRECTOR
                                      WHERE DIR_NAME = 'STEVEN SPIELBERGâ€˜));
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




